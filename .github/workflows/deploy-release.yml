name: "Deploy Release"

on:
  workflow_dispatch: # manually triggered


jobs:
  build_deploy_snapshot:
    runs-on: ubuntu-22.04
    permissions:
      contents: write

    steps:
      - name: "Checkout source"
        # https://github.com/actions/checkout/releases
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: "Set up JDK"
        # https://github.com/actions/setup-java/releases
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: temurin
          java-version: 17

      - name: "Setup Gradle"
        # https://github.com/gradle/actions/releases
        uses: gradle/actions/setup-gradle@06832c7b30a0129d7fb559bcc6e43d26f6374244 # v4.3.1
        with:
          validate-wrappers: true
          gradle-version: wrapper
          cache-disabled: false

      - name: "Build artifacts"
        run: ./gradlew build --full-stacktrace

      - name: "Publish artifacts"
        run: ./gradlew publish
        env:
          ALPINE_MAVEN_NAME: ${{ secrets.ALPINE_MAVEN_NAME }}
          ALPINE_MAVEN_SECRET: ${{ secrets.ALPINE_MAVEN_SECRET }}

      - name: "Write version"
        run: |
          ./gradlew writeVersion
          if [[ ! -f .version || ! -s .version ]]; then
            echo "Error: .version file is missing or empty."
            exit 1
          fi
          echo "RELEASE_VERSION=$(cat .version)" >> $GITHUB_ENV

      - name: "Create GitHub Release"
        # https://github.com/softprops/action-gh-release/releases
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2.2.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: v${{ env.RELEASE_VERSION }}
          files: |
            build/libs/AlpineCore-${{ env.RELEASE_VERSION }}.jar
            build/libs/AlpineCore-${{ env.RELEASE_VERSION }}-shaded.jar
          fail_on_unmatched_files: true
          make_latest: true
          prerelease: false
          draft: true

      - name: "Publish to Hangar"
        run: ./gradlew publishPluginPublicationToHangar --stacktrace
        env:
          HANGAR_API_TOKEN: ${{ secrets.HANGAR_API_TOKEN }}
